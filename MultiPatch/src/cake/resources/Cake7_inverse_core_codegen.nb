(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     18460,        427]
NotebookOptionsPosition[     16982,        393]
NotebookOutlinePosition[     17615,        413]
CellTagsIndexPosition[     17572,        410]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Piece of Cake coordinates inverse core code generation", "Title",
 CellChangeTimes->{{3.842480859572761*^9, 3.8424808734034557`*^9}, {
  3.842742869283586*^9, 3.842742878013317*^9}, {3.843003248017685*^9, 
  3.843003253996933*^9}, {3.843838607912539*^9, 3.8438386131860456`*^9}, {
  3.8692317274362097`*^9, 3.86923173082513*^9}, {3.869232009919592*^9, 
  3.869232010579658*^9}, {3.869581882986486*^9, 
  3.8695818848355417`*^9}},ExpressionUUID->"06cf51ac-2049-45e5-befb-\
5e7a3ea14fb4"],

Cell[CellGroupData[{

Cell["Inverse core function", "Section",
 CellChangeTimes->{{3.8448108646711617`*^9, 3.844810871321*^9}, {
  3.845641104146451*^9, 3.845641105656435*^9}, {3.8456414906301517`*^9, 
  3.845641495240016*^9}, {3.845641576798369*^9, 3.845641578368043*^9}, {
  3.869581893764955*^9, 
  3.8695819029347477`*^9}},ExpressionUUID->"4433c9f4-e92e-44f9-a920-\
9fcf114e462f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "inverseCore", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"inverseCore", "=", 
   RowBox[{"FullSimplify", "[", 
    FractionBox[
     RowBox[{
      SuperscriptBox["r0", "2"], "-", 
      SuperscriptBox["r1", "2"], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SuperscriptBox["a", "2"], "+", 
           SuperscriptBox["b", "2"]}], ")"}]}], ")"}], " ", 
       SuperscriptBox["var", "2"]}], "+", 
      SqrtBox[
       RowBox[{
        RowBox[{"4", " ", 
         RowBox[{"(", 
          RowBox[{"r0", "-", "r1"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SuperscriptBox["a", "2"], "+", 
              SuperscriptBox["b", "2"]}], ")"}], " ", "r0"}], "-", "r1"}], 
          ")"}], " ", 
         SuperscriptBox["var", "2"]}], "+", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SuperscriptBox["a", "2"], "+", 
              SuperscriptBox["b", "2"]}], ")"}]}], ")"}], "2"], " ", 
         SuperscriptBox["var", "4"]}]}]]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r0", "-", "r1"}], ")"}], "2"]], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.844432718702897*^9, 3.844432723490147*^9}, {
   3.844433003156488*^9, 3.844433027865608*^9}, {3.8444330937849827`*^9, 
   3.8444331069452744`*^9}, {3.8444332271426497`*^9, 
   3.8444333036133537`*^9}, {3.844433367962267*^9, 3.84443338179132*^9}, {
   3.844434003260775*^9, 3.844434030999547*^9}, {3.8444349425299797`*^9, 
   3.844434947688848*^9}, {3.844437113018725*^9, 3.844437116197493*^9}, {
   3.844437180747018*^9, 3.844437206146435*^9}, {3.844437684536944*^9, 
   3.844437764755073*^9}, {3.844438089981491*^9, 3.844438101659445*^9}, {
   3.844443350154336*^9, 3.844443354553878*^9}, 3.84444579101473*^9, 
   3.84444590438314*^9, {3.844446058899844*^9, 3.8444461060191927`*^9}, {
   3.844457535066834*^9, 3.844457591975732*^9}, {3.8444579741957607`*^9, 
   3.844458003434993*^9}, 3.844458249267202*^9, 3.844458294072276*^9, 
   3.844458367908342*^9, {3.844458398437764*^9, 3.8444584334594316`*^9}, {
   3.844458470739402*^9, 3.8444584733883657`*^9}, {3.844458596140977*^9, 
   3.844458600392589*^9}, {3.844458751570125*^9, 3.84445882387059*^9}, {
   3.8444594706433973`*^9, 3.844459474363484*^9}, {3.844810146956689*^9, 
   3.8448101877093067`*^9}, {3.84481045029561*^9, 3.844810493598917*^9}, {
   3.844810608559704*^9, 3.8448106316768827`*^9}, {3.844811023159759*^9, 
   3.844811023409419*^9}, {3.8456409139815474`*^9, 3.845640917190625*^9}, {
   3.845641109157414*^9, 3.8456411174383307`*^9}, {3.845641377892755*^9, 
   3.845641447331727*^9}, {3.845641505021315*^9, 3.845641567398898*^9}, {
   3.855784326894327*^9, 3.8557843272308807`*^9}, {3.855784406268498*^9, 
   3.8557844867461443`*^9}, {3.8557846396915703`*^9, 3.855784656878216*^9}, {
   3.856989776211707*^9, 3.856989778690833*^9}, {3.8569902072950363`*^9, 
   3.856990209882496*^9}, {3.857056977283764*^9, 3.8570569787419567`*^9}, {
   3.8691427661458673`*^9, 3.869142779474473*^9}, {3.869142812923567*^9, 
   3.8691429367547693`*^9}, {3.869142968670945*^9, 3.869142991879855*^9}, {
   3.8691431675781517`*^9, 3.869143191607959*^9}, 3.869231923569524*^9, {
   3.869233901223832*^9, 3.8692339050229797`*^9}, {3.869233972412163*^9, 
   3.869233973452284*^9}, {3.8692340208512497`*^9, 3.869234088550104*^9}, {
   3.869234134119227*^9, 3.8692341457972517`*^9}, {3.8695799377511473`*^9, 
   3.869579938519718*^9}, {3.869580048797024*^9, 3.8695800506668167`*^9}, {
   3.8695818900973043`*^9, 3.8695820029352207`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"1b9ac426-afd8-4657-a4aa-0e2ea49fc9c5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Function code generation routines", "Section",
 CellChangeTimes->{{3.85807029256612*^9, 3.85807030329497*^9}, 
   3.869242415762504*^9, {3.869242688777238*^9, 3.8692426889874*^9}, {
   3.869582029094955*^9, 3.8695820325147*^9}, {3.869582858130743*^9, 
   3.86958285934053*^9}},ExpressionUUID->"d9a6ec80-94ff-4010-a85e-\
5a76d9141abd"],

Cell[BoxData[
 RowBox[{"<<", "cse.m"}]], "Input",
 CellChangeTimes->{{3.869582135556119*^9, 3.869582137013852*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"c46fa854-c856-4219-9056-9a97901036d0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "generateCoreDeriv", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"generateCoreDeriv", "[", "variable_", "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"deriv", ",", "cse", ",", "csevar", ",", "function"}], "}"}], 
     ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"function", "=", 
       RowBox[{
       "\"\<CCTK_DEVICE CCTK_HOST inline CCTK_REAL\n\
d_global_to_local_cake_core_d\>\"", "<>", 
        RowBox[{"ToString", "[", "variable", "]"}], "<>", 
        "\"\<(const PatchTransformations &pt, CCTK_REAL a, CCTK_REAL b, \
CCTK_REAL var) {\n\n  using std::sqrt;\n  using std::pow;\n\n  const auto \
r0{pt.cake_inner_boundary_radius};\n  const auto \
r1{pt.cake_outer_boundary_radius};\n\n\>\""}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"deriv", "=", 
       RowBox[{"FullSimplify", "[", 
        RowBox[{"D", "[", 
         RowBox[{"inverseCore", ",", "variable"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"cse", "=", 
       RowBox[{"hoistCommonSubexpressions", "[", "deriv", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"csevar", "=", 
          RowBox[{"Reverse", "[", 
           RowBox[{"List", "@@", 
            RowBox[{"cse", "\[LeftDoubleBracket]", 
             RowBox[{"2", ",", "i"}], "\[RightDoubleBracket]"}]}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"function", "=", 
          RowBox[{"function", "<>", "\"\<  const CCTK_REAL \>\"", "<>", 
           RowBox[{"ToString", "[", 
            RowBox[{
            "csevar", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
            "]"}], "<>", "\"\< = \>\"", "<>", 
           RowBox[{"ToString", "[", 
            RowBox[{
             RowBox[{
             "csevar", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
              ",", "CForm"}], "]"}], "<>", "\"\<;\\n\>\""}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", 
           RowBox[{
           "cse", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
           "]"}]}], "}"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"function", "=", 
       RowBox[{"function", "<>", "\"\<\\n  return \>\"", "<>", 
        RowBox[{"ToString", "[", 
         RowBox[{
          RowBox[{
          "cse", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
          "CForm"}], "]"}], "<>", "\"\<;\\n}\>\""}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"function", "=", 
       RowBox[{"StringReplace", "[", 
        RowBox[{"function", ",", 
         RowBox[{"\"\<Sqrt\>\"", "\[Rule]", "\"\<sqrt\>\""}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"function", "=", 
       RowBox[{"StringReplace", "[", 
        RowBox[{"function", ",", 
         RowBox[{"\"\<Power\>\"", "\[Rule]", "\"\<pow\>\""}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "function", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.869582045018125*^9, 3.869582149236643*^9}, {
  3.869582200764106*^9, 3.86958228101245*^9}, {3.869582315963271*^9, 
  3.869582812972994*^9}, {3.8695829056213703`*^9, 3.869582909921093*^9}, {
  3.869586055407915*^9, 3.8695860603974943`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"6e4a9c67-8645-4251-9cf2-cfdf857d4aa5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "generateCoreDeriv2", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"generateCoreDeriv2", "[", 
    RowBox[{"variable1_", ",", "variable2_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"deriv", ",", "cse", ",", "csevar", ",", "function"}], "}"}], 
     ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
      "function", "=", 
       "\"\<CCTK_DEVICE CCTK_HOST inline CCTK_REAL\n\
d2_global_to_local_cake_core_d\>\""}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"variable1", "===", "variable2"}], ",", "\[IndentingNewLine]", 
        RowBox[{"function", "=", 
         RowBox[{"function", "<>", 
          RowBox[{"ToString", "[", "variable1", "]"}], "<>", "\"\<2\>\""}]}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"function", "=", 
         RowBox[{"function", "<>", 
          RowBox[{"ToString", "[", "variable1", "]"}], "<>", "\"\<d\>\"", "<>", 
          RowBox[{"ToString", "[", "variable2", "]"}]}]}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"function", "=", 
       RowBox[{
       "function", "<>", 
        "\"\<(const PatchTransformations &pt, CCTK_REAL a, CCTK_REAL b, \
CCTK_REAL var) {\n\n  using std::sqrt;\n  using std::pow;\n\n  const auto \
r0{pt.cake_inner_boundary_radius};\n  const auto \
r1{pt.cake_outer_boundary_radius};\n\n\>\""}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"deriv", "=", 
       RowBox[{"FullSimplify", "[", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{"inverseCore", ",", "variable1"}], "]"}], ",", 
          "variable2"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"cse", "=", 
       RowBox[{"hoistCommonSubexpressions", "[", "deriv", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"csevar", "=", 
          RowBox[{"Reverse", "[", 
           RowBox[{"List", "@@", 
            RowBox[{"cse", "\[LeftDoubleBracket]", 
             RowBox[{"2", ",", "i"}], "\[RightDoubleBracket]"}]}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"function", "=", 
          RowBox[{"function", "<>", "\"\<  const CCTK_REAL \>\"", "<>", 
           RowBox[{"ToString", "[", 
            RowBox[{
            "csevar", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
            "]"}], "<>", "\"\< = \>\"", "<>", 
           RowBox[{"ToString", "[", 
            RowBox[{
             RowBox[{
             "csevar", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
              ",", "CForm"}], "]"}], "<>", "\"\<;\\n\>\""}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", 
           RowBox[{
           "cse", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
           "]"}]}], "}"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"function", "=", 
       RowBox[{"function", "<>", "\"\<\\n  return \>\"", "<>", 
        RowBox[{"ToString", "[", 
         RowBox[{
          RowBox[{
          "cse", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
          "CForm"}], "]"}], "<>", "\"\<;\\n}\>\""}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"function", "=", 
       RowBox[{"StringReplace", "[", 
        RowBox[{"function", ",", 
         RowBox[{"\"\<Sqrt\>\"", "\[Rule]", "\"\<sqrt\>\""}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"function", "=", 
       RowBox[{"StringReplace", "[", 
        RowBox[{"function", ",", 
         RowBox[{"\"\<Power\>\"", "\[Rule]", "\"\<pow\>\""}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "function", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8695828680419893`*^9, 3.869582917550552*^9}, {
   3.8695830170197477`*^9, 3.869583023318801*^9}, {3.8695853858910007`*^9, 
   3.869585508467725*^9}, {3.869585589917552*^9, 3.869585592137252*^9}, {
   3.8695856734841833`*^9, 3.869585675393773*^9}, {3.869586068327723*^9, 
   3.869586071457121*^9}, 3.869586335138876*^9},
 CellLabel->"In[6]:=",ExpressionUUID->"09b369ae-4a79-4f8e-8330-1353b8759ae4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Code", "Section",
 CellChangeTimes->{{3.869582932079328*^9, 
  3.869582932489231*^9}},ExpressionUUID->"49959263-39ff-4722-80d9-\
35fb7a9a15a3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "srcFile", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
   "srcFile", "=", 
    "\"\<#ifndef MULTIPATCH_INVERSE_CORE_DERIVS_HPP\n#define \
MULTIPATCH_INVERSE_CORE_DERIVS_HPP\n\nnamespace MultiPatch {\nnamespace Cake \
{\n\n\>\""}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"srcFile", "=", 
    RowBox[{"srcFile", "<>", "\[IndentingNewLine]", 
     RowBox[{"generateCoreDeriv", "[", "a", "]"}], "<>", "\"\<\\n\\n\>\"", "<>",
      "\[IndentingNewLine]", 
     RowBox[{"generateCoreDeriv", "[", "b", "]"}], "<>", "\"\<\\n\\n\>\"", "<>",
      "\[IndentingNewLine]", 
     RowBox[{"generateCoreDeriv", "[", "var", "]"}], "<>", "\"\<\\n\\n\>\"", "<>",
      "\[IndentingNewLine]", 
     RowBox[{"generateCoreDeriv2", "[", 
      RowBox[{"a", ",", "a"}], "]"}], "<>", "\"\<\\n\\n\>\"", "<>", 
     "\[IndentingNewLine]", 
     RowBox[{"generateCoreDeriv2", "[", 
      RowBox[{"a", ",", "b"}], "]"}], "<>", "\"\<\\n\\n\>\"", "<>", 
     "\[IndentingNewLine]", 
     RowBox[{"generateCoreDeriv2", "[", 
      RowBox[{"a", ",", "var"}], "]"}], "<>", "\"\<\\n\\n\>\"", "<>", 
     "\[IndentingNewLine]", 
     RowBox[{"generateCoreDeriv2", "[", 
      RowBox[{"b", ",", "b"}], "]"}], "<>", "\"\<\\n\\n\>\"", "<>", 
     "\[IndentingNewLine]", 
     RowBox[{"generateCoreDeriv2", "[", 
      RowBox[{"b", ",", "var"}], "]"}], "<>", "\"\<\\n\\n\>\"", "<>", 
     "\[IndentingNewLine]", 
     RowBox[{"generateCoreDeriv2", "[", 
      RowBox[{"var", ",", "var"}], "]"}], "<>", 
     "\"\<\\n\n} // namespace Cake\n} // namespace MultiPatch\n\n#endif // \
MULTIPATCH_INVERSE_CORE_DERIVS_HPP\>\""}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<cake_inverse_core_derivs.hxx\>\"", ",", "srcFile", ",", 
    "\"\<Text\>\""}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "Run", "[", "\"\<clang-format -i cake_inverse_core_derivs.hxx\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Run", "[", "\"\<mv cake_inverse_core_derivs.hxx ../\>\"", "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.869584168420044*^9, 3.869584421707678*^9}, {
  3.869584632793271*^9, 3.869584644492354*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"6ae77445-b68f-44b0-9b5e-cfeca52501f2"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1502.608695652174, 788.0869565217392},
WindowMargins->{{0, Automatic}, {Automatic, 22.945054945054945`}},
TaggingRules->{
 "WelcomeScreenSettings" -> {"FEStarting" -> False}, "TryRealOnly" -> False},
DefaultNaturalLanguage->Language,
FrontEndVersion->"12.1 for Linux x86 (64-bit) (June 19, 2020)",
StyleDefinitions->FrontEnd`FileName[{"Report"}, "StandardReport.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"c7c54479-860f-4a9a-bc66-0ea79160d210"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 492, 7, 103, "Title",ExpressionUUID->"06cf51ac-2049-45e5-befb-5e7a3ea14fb4"],
Cell[CellGroupData[{
Cell[1097, 33, 362, 6, 73, "Section",ExpressionUUID->"4433c9f4-e92e-44f9-a920-9fcf114e462f"],
Cell[1462, 41, 3955, 79, 91, "Input",ExpressionUUID->"1b9ac426-afd8-4657-a4aa-0e2ea49fc9c5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5454, 125, 340, 5, 73, "Section",ExpressionUUID->"d9a6ec80-94ff-4010-a85e-5a76d9141abd"],
Cell[5797, 132, 193, 3, 40, "Input",ExpressionUUID->"c46fa854-c856-4219-9056-9a97901036d0"],
Cell[5993, 137, 3758, 83, 657, "Input",ExpressionUUID->"6e4a9c67-8645-4251-9cf2-cfdf857d4aa5"],
Cell[9754, 222, 4634, 103, 801, "Input",ExpressionUUID->"09b369ae-4a79-4f8e-8330-1353b8759ae4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14425, 330, 149, 3, 73, "Section",ExpressionUUID->"49959263-39ff-4722-80d9-35fb7a9a15a3"],
Cell[14577, 335, 2377, 54, 575, "Input",ExpressionUUID->"6ae77445-b68f-44b0-9b5e-cfeca52501f2"]
}, Open  ]]
}, Open  ]]
}
]
*)

