(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     24748,        565]
NotebookOptionsPosition[     23376,        533]
NotebookOutlinePosition[     24028,        554]
CellTagsIndexPosition[     23985,        551]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Piece of Cake coordinates Jacobian code generation", "Title",
 CellChangeTimes->{{3.842480859572761*^9, 3.8424808734034557`*^9}, {
  3.842742869283586*^9, 3.842742878013317*^9}, {3.843003248017685*^9, 
  3.843003253996933*^9}, {3.843838607912539*^9, 3.8438386131860456`*^9}, {
  3.8692317274362097`*^9, 3.86923173082513*^9}, {3.869232009919592*^9, 
  3.869232010579658*^9}},ExpressionUUID->"06cf51ac-2049-45e5-befb-\
5e7a3ea14fb4"],

Cell[CellGroupData[{

Cell["Patch system skeleton", "Section",
 CellChangeTimes->{{3.8448108646711617`*^9, 3.844810871321*^9}, {
  3.845641104146451*^9, 3.845641105656435*^9}, {3.8456414906301517`*^9, 
  3.845641495240016*^9}, {3.845641576798369*^9, 
  3.845641578368043*^9}},ExpressionUUID->"4433c9f4-e92e-44f9-a920-\
9fcf114e462f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"InverseCakePlusX", ",", "InverseCakeMinusX"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InverseCakePlusX", "=", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["z", "x"], ",", 
     FractionBox["y", "x"], ",", 
     RowBox[{"inverseCore", "[", 
      RowBox[{
       FractionBox["z", "x"], ",", 
       FractionBox["y", "x"], ",", "x"}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"InverseCakeMinusX", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["z", "x"]}], ",", 
      FractionBox["y", "x"], ",", 
      RowBox[{"inverseCore", "[", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["z", "x"]}], ",", 
        FractionBox["y", "x"], ",", "x"}], "]"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"InverseCakePlusY", ",", "InverseCakeMinusY"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InverseCakePlusY", "=", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["z", "y"], ",", 
     RowBox[{"-", 
      FractionBox["x", "y"]}], ",", 
     RowBox[{"inverseCore", "[", 
      RowBox[{
       FractionBox["z", "y"], ",", 
       RowBox[{"-", 
        FractionBox["x", "y"]}], ",", "y"}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"InverseCakeMinusY", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["z", "y"]}], ",", 
      RowBox[{"-", 
       FractionBox["x", "y"]}], ",", 
      RowBox[{"inverseCore", "[", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["z", "y"]}], ",", 
        RowBox[{"-", 
         FractionBox["x", "y"]}], ",", "y"}], "]"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"InverseCakePlusZ", ",", "InverseCakeMinusZ"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InverseCakePlusZ", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["x", "z"]}], ",", 
     FractionBox["y", "z"], ",", 
     RowBox[{"inverseCore", "[", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["x", "z"]}], ",", 
       FractionBox["y", "z"], ",", "z"}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InverseCakeMinusZ", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["x", "z"]}], ",", 
     RowBox[{"-", 
      FractionBox["y", "z"]}], ",", 
     RowBox[{"inverseCore", "[", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["x", "z"]}], ",", 
       RowBox[{"-", 
        FractionBox["y", "z"]}], ",", "z"}], "]"}]}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.844432718702897*^9, 3.844432723490147*^9}, {
   3.844433003156488*^9, 3.844433027865608*^9}, {3.8444330937849827`*^9, 
   3.8444331069452744`*^9}, {3.8444332271426497`*^9, 
   3.8444333036133537`*^9}, {3.844433367962267*^9, 3.84443338179132*^9}, {
   3.844434003260775*^9, 3.844434030999547*^9}, {3.8444349425299797`*^9, 
   3.844434947688848*^9}, {3.844437113018725*^9, 3.844437116197493*^9}, {
   3.844437180747018*^9, 3.844437206146435*^9}, {3.844437684536944*^9, 
   3.844437764755073*^9}, {3.844438089981491*^9, 3.844438101659445*^9}, {
   3.844443350154336*^9, 3.844443354553878*^9}, 3.84444579101473*^9, 
   3.84444590438314*^9, {3.844446058899844*^9, 3.8444461060191927`*^9}, {
   3.844457535066834*^9, 3.844457591975732*^9}, {3.8444579741957607`*^9, 
   3.844458003434993*^9}, 3.844458249267202*^9, 3.844458294072276*^9, 
   3.844458367908342*^9, {3.844458398437764*^9, 3.8444584334594316`*^9}, {
   3.844458470739402*^9, 3.8444584733883657`*^9}, {3.844458596140977*^9, 
   3.844458600392589*^9}, {3.844458751570125*^9, 3.84445882387059*^9}, {
   3.8444594706433973`*^9, 3.844459474363484*^9}, {3.844810146956689*^9, 
   3.8448101877093067`*^9}, {3.84481045029561*^9, 3.844810493598917*^9}, {
   3.844810608559704*^9, 3.8448106316768827`*^9}, {3.844811023159759*^9, 
   3.844811023409419*^9}, {3.8456409139815474`*^9, 3.845640917190625*^9}, {
   3.845641109157414*^9, 3.8456411174383307`*^9}, {3.845641377892755*^9, 
   3.845641447331727*^9}, {3.845641505021315*^9, 3.845641567398898*^9}, {
   3.855784326894327*^9, 3.8557843272308807`*^9}, {3.855784406268498*^9, 
   3.8557844867461443`*^9}, {3.8557846396915703`*^9, 3.855784656878216*^9}, {
   3.856989776211707*^9, 3.856989778690833*^9}, {3.8569902072950363`*^9, 
   3.856990209882496*^9}, {3.857056977283764*^9, 3.8570569787419567`*^9}, {
   3.8691427661458673`*^9, 3.869142779474473*^9}, {3.869142812923567*^9, 
   3.8691429367547693`*^9}, {3.869142968670945*^9, 3.869142991879855*^9}, {
   3.8691431675781517`*^9, 3.869143191607959*^9}, 3.869231923569524*^9, {
   3.869233901223832*^9, 3.8692339050229797`*^9}, {3.869233972412163*^9, 
   3.869233973452284*^9}, {3.8692340208512497`*^9, 3.869234088550104*^9}, {
   3.869234134119227*^9, 3.8692341457972517`*^9}, {3.8695799377511473`*^9, 
   3.869579938519718*^9}, {3.869580048797024*^9, 3.8695800506668167`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"1b9ac426-afd8-4657-a4aa-0e2ea49fc9c5"]
}, Closed]],

Cell[CellGroupData[{

Cell["Jacobian file generation", "Section",
 CellChangeTimes->{{3.85807029256612*^9, 3.85807030329497*^9}, 
   3.869242415762504*^9, {3.869242688777238*^9, 
   3.8692426889874*^9}},ExpressionUUID->"d9a6ec80-94ff-4010-a85e-\
5a76d9141abd"],

Cell[TextData[{
 "CarpetX defines\n\n",
 Cell[BoxData[{
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"J", "[", "i", "]"}], "[", "j", "]"}], "=", 
    FractionBox[
     SuperscriptBox["da", "i"], 
     SuperscriptBox["dx", "j"]]}], TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"dJ", "[", "i", "]"}], "[", "j", "]"}], "[", "k", "]"}], "=", 
    RowBox[{
     FractionBox["d", 
      SuperscriptBox["dx", "k"]], 
     RowBox[{"(", 
      FractionBox[
       SuperscriptBox["da", "i"], 
       SuperscriptBox["dx", "j"]], ")"}]}]}], TraditionalForm]}],
  ExpressionUUID->"e916b45b-0691-43bb-b104-b99c3792f970"],
 "\n\nThat is, we must evaluate the derivatives of all local to global \
coordinate transformations (here defined in the \
\[OpenCurlyDoubleQuote]Inverse patch system\[CloseCurlyDoubleQuote] section).\
\nTo eliminate typing errors, the Jacobian components and \
it\[CloseCurlyQuote]s derivatives are calculated and a C++ source file is \
automatically generated for each patch piece. The function bellow generates a \
Jacobian file based taking a patch name and it\[CloseCurlyQuote]s string \
conversion as input"
}], "Text",
 CellChangeTimes->{{3.8460843424597054`*^9, 3.846084494466394*^9}, {
  3.857120063429269*^9, 3.857120086484022*^9}, {3.857132591638426*^9, 
  3.857132592022197*^9}, {3.8580687165349627`*^9, 3.858068867341958*^9}, {
  3.858069271864131*^9, 3.858069323613624*^9}, {3.858069425391279*^9, 
  3.85806947653013*^9}, {3.8580702263171883`*^9, 
  3.858070287806102*^9}},ExpressionUUID->"a1dc3eef-aba1-46f5-8810-\
b875ef843746"],

Cell[BoxData[
 RowBox[{
  RowBox[{"generateJacobians", "[", 
   RowBox[{"inputStr_", ",", "patchName_"}], "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "outputStr", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"outputStr", "=", "inputStr"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"outputStr", "=", 
        RowBox[{"outputStr", "<>", "\[IndentingNewLine]", "\"\<    J(\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"i", "-", "1"}], "]"}], "<>", "\"\<)(\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"j", "-", "1"}], "]"}], "<>", "\"\<) = \>\"", "<>", 
         "\[IndentingNewLine]", 
         RowBox[{"ToString", "[", 
          RowBox[{
           RowBox[{"FullSimplify", "[", 
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{
              "patchName", "\[LeftDoubleBracket]", "i", 
               "\[RightDoubleBracket]"}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"x", ",", "y", ",", "z"}], "}"}], 
               "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}]}], 
             "]"}], "]"}], ",", "CForm"}], "]"}], "<>", "\"\<;\\n\>\""}]}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "3"}], "}"}]}], "\[IndentingNewLine]", 
      "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"outputStr", "=", 
      RowBox[{"outputStr", "<>", "\"\<\\n\>\""}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"outputStr", "=", 
        RowBox[{"outputStr", "<>", "\[IndentingNewLine]", "\"\<    dJ(\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"i", "-", "1"}], "]"}], "<>", "\"\<)(\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"j", "-", "1"}], "]"}], "<>", "\"\<,\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"k", "-", "1"}], "]"}], "<>", "\"\<) = \>\"", "<>", 
         "\[IndentingNewLine]", 
         RowBox[{"ToString", "[", 
          RowBox[{
           RowBox[{"FullSimplify", "[", 
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"D", "[", 
               RowBox[{
                RowBox[{
                "patchName", "\[LeftDoubleBracket]", "i", 
                 "\[RightDoubleBracket]"}], ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"x", ",", "y", ",", "z"}], "}"}], 
                 "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}]}], 
               "]"}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"x", ",", "y", ",", "z"}], "}"}], 
               "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}]}], 
             "]"}], "]"}], ",", "CForm"}], "]"}], "<>", "\"\<;\\n\>\""}]}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "\[IndentingNewLine]", 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"outputStr", "=", 
      RowBox[{"outputStr", "<>", "\"\<    break;\\n\>\""}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "outputStr", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.869239711715683*^9, 3.869239807725449*^9}, {
  3.869239921072564*^9, 3.869239927713436*^9}, {3.869239987391498*^9, 
  3.869240073240534*^9}, {3.869240250315014*^9, 3.869240278973666*^9}, {
  3.8692403569332542`*^9, 3.86924035729281*^9}, {3.869242234598077*^9, 
  3.8692422355678596`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"24dd430f-c257-4863-b47f-f7d4a552d3d2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"generateJacobianFile", "[", "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "srcFile", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
      "srcFile", "=", 
       "\"\<#ifndef MULTIPATCH_CAKE_JACOBIANS_HXX\n#define \
MULTIPATCH_CAKE_JACOBIANS_HXX\n\nnamespace MultiPatch {\nnamespace Cake {\n\n\
CCTK_DEVICE CCTK_HOST inline std_tuple<jac_t, djac_t> cake_jacs(const \
PatchTransformations &pt, int patch, const svec_u &global_vars) {\n  using \
std::pow;\n  using std::sqrt;\n\n  jac_t J{};\n  djac_t dJ{};\n\n  const auto \
x = global_vars(0);\n  const auto y = global_vars(1);\n  const auto z = \
global_vars(2);\n\n  switch (patch) {\n\n  case \
static_cast<int>(patch_piece::cartesian):\n\>\""}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", "Cartesian", " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"srcFile", "=", 
       RowBox[{"generateJacobians", "[", 
        RowBox[{"srcFile", ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Plus", " ", "X"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"srcFile", "=", 
       RowBox[{
       "srcFile", "<>", 
        "\"\<\\n  case static_cast<int>(patch_piece::plus_x):\\n\>\""}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"srcFile", "=", 
       RowBox[{"generateJacobians", "[", 
        RowBox[{"srcFile", ",", "InverseCakePlusX"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Minus", " ", "X"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"srcFile", "=", 
       RowBox[{
       "srcFile", "<>", 
        "\"\<\\n  case static_cast<int>(patch_piece::minus_x):\\n\>\""}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"srcFile", "=", 
       RowBox[{"generateJacobians", "[", 
        RowBox[{"srcFile", ",", "InverseCakeMinusX"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Plus", " ", "Y"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"srcFile", "=", 
       RowBox[{
       "srcFile", "<>", 
        "\"\<\\n  case static_cast<int>(patch_piece::plus_y):\\n\>\""}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"srcFile", "=", 
       RowBox[{"generateJacobians", "[", 
        RowBox[{"srcFile", ",", "InverseCakePlusY"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", "MinusY", " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"srcFile", "=", 
       RowBox[{
       "srcFile", "<>", 
        "\"\<\\n  case static_cast<int>(patch_piece::minus_y):\\n\>\""}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"srcFile", "=", 
       RowBox[{"generateJacobians", "[", 
        RowBox[{"srcFile", ",", "InverseCakeMinusY"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Plus", " ", "Z"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"srcFile", "=", 
       RowBox[{
       "srcFile", "<>", 
        "\"\<\\n  case static_cast<int>(patch_piece::plus_z):\\n\>\""}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"srcFile", "=", 
       RowBox[{"generateJacobians", "[", 
        RowBox[{"srcFile", ",", "InverseCakePlusZ"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", "MinusZ", " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"srcFile", "=", 
       RowBox[{
       "srcFile", "<>", 
        "\"\<\\n  case static_cast<int>(patch_piece::minus_z):\\n\>\""}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"srcFile", "=", 
       RowBox[{"generateJacobians", "[", 
        RowBox[{"srcFile", ",", "InverseCakeMinusZ"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"srcFile", "=", 
       RowBox[{
       "srcFile", "<>", 
        "\"\<\\n  default:\n#ifndef __CUDACC__\n    CCTK_VERROR(\\\"No \
jacobians available for patch %s\\\", \
piece_name(static_cast<patch_piece>(patch)).c_str());\n#else\n    assert(0);\n\
#endif\n    break;\n  }\n\n  return std_make_tuple(J, dJ);\n}\n\n} // \
namespace Cake\n} // namespace MultiPatch\n\n#endif // \
MULTIPATCH_CAKE_JACOBIANS_HXX\>\""}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"srcFile", "=", 
       RowBox[{"StringReplace", "[", 
        RowBox[{"srcFile", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
           "\"\<inverseCore\>\"", "\[Rule]", 
            "\"\<global_to_local_cake_core\>\""}], ",", 
           RowBox[{"\"\<Power\>\"", "\[Rule]", "\"\<pow\>\""}], ",", 
           RowBox[{"\"\<Sqrt\>\"", "\[Rule]", "\"\<sqrt\>\""}]}], "}"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"srcFile", "=", 
       RowBox[{"StringReplace", "[", 
        RowBox[{"srcFile", ",", 
         RowBox[{
         "\"\<Derivative(1,0,0)(global_to_local_cake_core)(\>\"", "\[Rule]", 
          "\"\<d_global_to_local_cake_core_da(pt,\>\""}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"srcFile", "=", 
       RowBox[{"StringReplace", "[", 
        RowBox[{"srcFile", ",", 
         RowBox[{
         "\"\<Derivative(0,1,0)(global_to_local_cake_core)(\>\"", "\[Rule]", 
          "\"\<d_global_to_local_cake_core_db(pt,\>\""}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"srcFile", "=", 
       RowBox[{"StringReplace", "[", 
        RowBox[{"srcFile", ",", 
         RowBox[{
         "\"\<Derivative(0,0,1)(global_to_local_cake_core)(\>\"", "\[Rule]", 
          "\"\<d_global_to_local_cake_core_dvar(pt,\>\""}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"srcFile", "=", 
       RowBox[{"StringReplace", "[", 
        RowBox[{"srcFile", ",", 
         RowBox[{
         "\"\<Derivative(2,0,0)(global_to_local_cake_core)(\>\"", "\[Rule]", 
          "\"\<d2_global_to_local_cake_core_da2(pt,\>\""}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"srcFile", "=", 
       RowBox[{"StringReplace", "[", 
        RowBox[{"srcFile", ",", 
         RowBox[{
         "\"\<Derivative(1,1,0)(global_to_local_cake_core)(\>\"", "\[Rule]", 
          "\"\<d2_global_to_local_cake_core_dadb(pt,\>\""}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"srcFile", "=", 
       RowBox[{"StringReplace", "[", 
        RowBox[{"srcFile", ",", 
         RowBox[{
         "\"\<Derivative(1,0,1)(global_to_local_cake_core)(\>\"", "\[Rule]", 
          "\"\<d2_global_to_local_cake_core_dadvar(pt,\>\""}]}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"srcFile", "=", 
       RowBox[{"StringReplace", "[", 
        RowBox[{"srcFile", ",", 
         RowBox[{
         "\"\<Derivative(0,2,0)(global_to_local_cake_core)(\>\"", "\[Rule]", 
          "\"\<d2_global_to_local_cake_core_db2(pt,\>\""}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"srcFile", "=", 
       RowBox[{"StringReplace", "[", 
        RowBox[{"srcFile", ",", 
         RowBox[{
         "\"\<Derivative(0,1,1)(global_to_local_cake_core)(\>\"", "\[Rule]", 
          "\"\<d2_global_to_local_cake_core_dbdvar(pt,\>\""}]}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"srcFile", "=", 
       RowBox[{"StringReplace", "[", 
        RowBox[{"srcFile", ",", 
         RowBox[{
         "\"\<Derivative(0,0,2)(global_to_local_cake_core)(\>\"", "\[Rule]", 
          "\"\<d2_global_to_local_cake_core_dvar2(pt,\>\""}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{
       "\"\<cake_jacobians.hxx\>\"", ",", "srcFile", ",", "\"\<Text\>\""}], 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Run", "[", "\"\<clang-format -i cake_jacobians.hxx\>\"", "]"}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"Run", "[", "\"\<mv cake_jacobians.hxx ../\>\"", "]"}], ";"}]}],
     "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.869234797385166*^9, 3.86923480726467*^9}, {
   3.869234840303356*^9, 3.869234864493286*^9}, {3.869234927291984*^9, 
   3.869234951661181*^9}, {3.869235072099189*^9, 3.869235221686398*^9}, {
   3.869235293875229*^9, 3.869235523301999*^9}, {3.86923574565753*^9, 
   3.869235746858432*^9}, {3.869236564047283*^9, 3.869236586047759*^9}, {
   3.869236633447248*^9, 3.8692367771232986`*^9}, {3.869236939000773*^9, 
   3.8692371168465233`*^9}, {3.86923720488303*^9, 3.8692372292473917`*^9}, {
   3.869237555477296*^9, 3.8692375686471*^9}, {3.869237694923934*^9, 
   3.869237701823824*^9}, {3.869237784702607*^9, 3.869237873632436*^9}, {
   3.869237913680784*^9, 3.869237920410486*^9}, {3.869237961529859*^9, 
   3.869238059697053*^9}, {3.8692380953673353`*^9, 3.8692381385968018`*^9}, {
   3.8692391790264387`*^9, 3.8692392000757093`*^9}, {3.869239370472707*^9, 
   3.8692393839221888`*^9}, {3.869239433891803*^9, 3.869239493246479*^9}, {
   3.86923960842239*^9, 3.8692396111026506`*^9}, {3.869239650289331*^9, 
   3.869239667948015*^9}, {3.869239721758232*^9, 3.8692397228464518`*^9}, {
   3.8692398253975286`*^9, 3.86923986686705*^9}, {3.869239897492515*^9, 
   3.8692398989614897`*^9}, {3.869240128066827*^9, 3.86924013001616*^9}, {
   3.869240222375145*^9, 3.8692402238640003`*^9}, {3.869240383201541*^9, 
   3.8692404328203983`*^9}, {3.869240661277239*^9, 3.869240672598349*^9}, {
   3.869240732955813*^9, 3.869240746475909*^9}, {3.869240857946594*^9, 
   3.86924091007308*^9}, {3.869241107519951*^9, 3.8692411637782803`*^9}, 
   3.869241309246283*^9, {3.8692413663350554`*^9, 3.869241370324709*^9}, {
   3.869241458103149*^9, 3.869241754038538*^9}, {3.869241789860816*^9, 
   3.8692418129404984`*^9}, {3.869241933685297*^9, 3.86924194605368*^9}, {
   3.869242008473575*^9, 3.8692421364503593`*^9}, {3.8692421856207533`*^9, 
   3.869242186610132*^9}, {3.869242221539941*^9, 3.869242223028735*^9}, {
   3.869242306366078*^9, 3.8692423073379*^9}, 3.869242387055204*^9, {
   3.86924244141494*^9, 3.869242498293481*^9}, {3.869242626624042*^9, 
   3.869242640221303*^9}, {3.869577947718602*^9, 3.869577983272213*^9}, {
   3.869581025820735*^9, 3.869581046849091*^9}, {3.869581091298018*^9, 
   3.869581136558146*^9}, {3.869584522925926*^9, 3.869584524135091*^9}, {
   3.8695852032152243`*^9, 3.869585208394876*^9}, {3.869585261414699*^9, 
   3.869585283947176*^9}, 3.8695892860905647`*^9, {3.869589448727989*^9, 
   3.86958944904696*^9}},ExpressionUUID->"91b56626-d4f4-413c-9e73-\
f5cc2632a663"],

Cell[BoxData[
 RowBox[{"generateJacobianFile", "[", "]"}]], "Input",
 CellLabel->"In[12]:=",ExpressionUUID->"2c2637fd-e17c-41d2-8000-b6116f040e5d"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1502.608695652174, 788.0869565217392},
WindowMargins->{{1502.608695652174, Automatic}, {
  Automatic, 22.945054945054945`}},
TaggingRules->{
 "WelcomeScreenSettings" -> {"FEStarting" -> False}, "TryRealOnly" -> False},
DefaultNaturalLanguage->Language,
FrontEndVersion->"12.1 for Linux x86 (64-bit) (June 19, 2020)",
StyleDefinitions->FrontEnd`FileName[{"Report"}, "StandardReport.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"c7c54479-860f-4a9a-bc66-0ea79160d210"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 437, 6, 103, "Title",ExpressionUUID->"06cf51ac-2049-45e5-befb-5e7a3ea14fb4"],
Cell[CellGroupData[{
Cell[1042, 32, 311, 5, 73, "Section",ExpressionUUID->"4433c9f4-e92e-44f9-a920-9fcf114e462f"],
Cell[1356, 39, 5201, 127, 337, "Input",ExpressionUUID->"1b9ac426-afd8-4657-a4aa-0e2ea49fc9c5"]
}, Closed]],
Cell[CellGroupData[{
Cell[6594, 171, 238, 4, 59, "Section",ExpressionUUID->"d9a6ec80-94ff-4010-a85e-5a76d9141abd"],
Cell[6835, 177, 1617, 38, 224, "Text",ExpressionUUID->"a1dc3eef-aba1-46f5-8810-b875ef843746"],
Cell[8455, 217, 4058, 90, 493, "Input",ExpressionUUID->"24dd430f-c257-4863-b47f-f7d4a552d3d2"],
Cell[12516, 309, 10682, 216, 1746, "Input",ExpressionUUID->"91b56626-d4f4-413c-9e73-f5cc2632a663"],
Cell[23201, 527, 147, 2, 40, "Input",ExpressionUUID->"2c2637fd-e17c-41d2-8000-b6116f040e5d"]
}, Open  ]]
}, Open  ]]
}
]
*)

